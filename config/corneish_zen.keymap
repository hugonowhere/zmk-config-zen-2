#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        //zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&shifted>, <&kp>;
        };

        HT_Eaigu: HT_Eaigu {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_EAIGU";
            bindings = <&MC_Eaigu>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <2>;
        };

        HT_Egrave: HT_Egrave {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_EGRAVE";
            bindings = <&MC_Egrave>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <140>;
            hold-trigger-key-positions = <5>;
        };

        HT_Aaigu: HT_Aaigu {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_AAIGU";
            bindings = <&MC_Aaigu>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <12>;
        };

        HT_Ccedille: HT_Ccedille {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_CCEDILLE";
            bindings = <&MC_Ccedille>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <30>;
        };

        HT_Uaigu: HT_Uaigu {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_UAIGU";
            bindings = <&MC_Uaigu>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <24>;
        };

        MORPH_BkSpcDel_Tap: BkSpcDelTap {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACEDELTAP";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        MORPH_BkSpcDel_Hold: MORPH_BkSpcDel_Hold {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPH_BACKSPACEDEL_HOLD";
            bindings = <&kp RC(BACKSPACE)>, <&kp RC(DEL)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        HT_BkSpcDel: HT_BkSpcDel {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_BackSpaceDel";
            bindings = <&MORPH_BkSpcDel_Hold>, <&MORPH_BkSpcDel_Tap>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <41>;
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        MC_Eaigu: MC_Eaigu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_4) &kp LA(KP_NUMBER_4)>;
            label = "MC_EAIGU";
        };

        MC_Egrave: MC_Egrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_2) &kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_2)>;
            label = "MC_EGRAVE";
        };

        MC_Ccedille: MC_Ccedille {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_2) &kp LA(KP_NUMBER_8)>;
            label = "MC_CCEDILLE";
        };

        MC_Aaigu: MC_Aaigu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_N0) &kp LA(KP_NUMBER_1) &kp LA(KP_NUMBER_9) &kp LA(KP_NUMBER_2)>;
            label = "MC_AAIGU";
        };

        MC_Uaigu: MC_Uaigu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_2) &kp LA(KP_NUMBER_3) &kp LA(KP_NUMBER_5)>;
            label = "MC_UAIGU";
        };
    };

    combos {
        compatible = "zmk,combos";

        underscore {
            bindings = <&kp N8>;
            key-positions = <28 29>;
        };

        tiret {
            bindings = <&kp N6>;
            key-positions = <18 19>;
        };

        undo {
            bindings = <&kp LC(W)>;
            key-positions = <2 3>;
        };

        redo {
            bindings = <&kp LC(Y)>;
            key-positions = <3 4>;
        };

        printsc {
            bindings = <&ht LG(N8) LS(LG(S))>;
            key-positions = <4 5>;
        };

        selectall {
            bindings = <&kp LC(Q)>;
            key-positions = <14 15 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "BEPO";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt HASH AT_SIGN          &as B  &HT_Eaigu 0 N2  &as P         &as O      &HT_Egrave 0 N7    &kp CARET          &as V        &as D             &as L  &as J  &as W
&HT_Aaigu 0 N0            &as A  &as U           &as I         &as E      &kp SQT            &as C              &as T        &as S             &as R  &as N  &as M
&HT_Uaigu 0 SINGLE_QUOTE  &as X  &as Z           &as Y         &as COMMA  &kp B              &HT_Ccedille 0 N9  &as Q        &as G             &as H  &as F  &as K
                                                 &lt 3 ESCAPE  &lt 2 TAB  &mt LCTRL ENTER    &lt 1 ENTER        &lt 2 SPACE  &HT_BkSpcDel 0 0
            >;
        };

        layer_1 {
            label = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6        &kp N7   &kp N8    &kp N9  &kp DLLR  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp STAR      &kp N4   &kp N5    &kp N6  &kp E     &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &kp LS(PLUS)  &kp N1   &kp N2    &kp N3  &kp N3    &trans
                                        &kp LGUI      &trans        &trans          &kp RET       &kp DOT  &kp RALT
            >;
        };

        layer_2 {
            label = "NAVIGATION";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
